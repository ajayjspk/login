[{"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\index.js":"1","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\reportWebVitals.js":"2","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\App.js":"3","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Login.js":"4","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Register.js":"5","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Otp.js":"6","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\RequestButton.js":"7","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Input.js":"8"},{"size":334,"mtime":1700246523519,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1700246523703,"results":"11","hashOfConfig":"10"},{"size":485,"mtime":1700246523903,"results":"12","hashOfConfig":"10"},{"size":2122,"mtime":1700246524213,"results":"13","hashOfConfig":"10"},{"size":1962,"mtime":1700246524444,"results":"14","hashOfConfig":"10"},{"size":2114,"mtime":1700246524344,"results":"15","hashOfConfig":"10"},{"size":262,"mtime":1700246524560,"results":"16","hashOfConfig":"10"},{"size":231,"mtime":1700246524049,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ndydh",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\index.js",[],[],"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\reportWebVitals.js",[],[],"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\App.js",[],[],"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Login.js",["44","45"],[],"import React from 'react'\r\nimport './Login.css';\r\nimport logo from '../images/Group 33524.svg';\r\nimport { Link } from 'react-router-dom'\r\nimport Input from './Input';\r\nimport RequestButton from './RequestButton';\r\nimport Google from '../images/google.svg';\r\n\r\nexport default function Login() {\r\n\r\n    const handleGoogleLogin = () => {\r\n        window.open('http://localhost:3001/auth/google', '_self')\r\n    }\r\n\r\n    const handleGithubLogin = () => {\r\n        window.open('http://localhost:3001/auth/github', '_self')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <center><img src={logo} alt='logo' style={{ padding: '1rem' }} /></center>\r\n            <div className=\"login-container\">\r\n                <div className='welcome'>\r\n                    <h3 style={{ color: 'gray' }}>WelcomeðŸ‘‹</h3>\r\n                    <h1 style={{ color: 'white', marginTop: '-1rem' }}>Login Account</h1>\r\n                </div>\r\n                <div className=\"social-buttons\">\r\n                    <button className='login-button' onClick={handleGoogleLogin}><img width=\"30\" height=\"30\" src=\"https://img.icons8.com/color/30/google-logo.png\" alt=\"google-logo\" />Google</button>\r\n                    <button className='login-button' onClick={handleGithubLogin}><img width=\"42\" height=\"42\" src=\"https://img.icons8.com/sf-regular-filled/48/000000/github.png\" alt=\"github\" />Github</button>\r\n                </div>\r\n                <center><h3 style={{ color: '#4245cb' }}>Or</h3></center>\r\n                <label for=\"email\" className='label'>Email address*</label><br></br>\r\n                <Input placeholder={'Enter email address'} type={'text'} /><br></br>\r\n\r\n                <label for=\"password\" className='label'>Password*</label><br></br>\r\n                <Input placeholder={'Enter password'} type={'password'} />\r\n\r\n                <center><RequestButton text={'Login'} /></center>\r\n\r\n                <center><p style={{ fontSize: '15px', color: 'dimgray' }}>You don't have an account?<Link to='/register'> <a href=\"#\" class=\"register-link\">Register account</a></Link></p></center>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Register.js",[],[],"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Otp.js",["46"],[],"import React, { useState } from 'react';\r\nimport RequestButton from './RequestButton';\r\nimport logo from '../images/Group 33524.svg';\r\nimport './Otp.css';\r\n\r\nfunction Otp() {\r\n    const [otpValues, setOtpValues] = useState(Array(6).fill(''));\r\n    const inputRefs = Array.from({ length: 6 });\r\n\r\n    const handleChange = (index, value) => {\r\n        const sanitizedValue = value.replace(/[^0-9]/g, '');\r\n\r\n        setOtpValues((prevValues) => {\r\n            const newValues = [...prevValues];\r\n            newValues[index] = sanitizedValue;\r\n            return newValues;\r\n        });\r\n\r\n        if (sanitizedValue && index < 5 && inputRefs[index + 1]) {\r\n            inputRefs[index + 1].focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <center><img src={logo} alt='logo' style={{ padding: '4rem' }} /></center>\r\n            <div className=\"otp-container\">\r\n                <h1 style={{ color: 'white' }}>OTP Verification</h1>\r\n                <p style={{ color: '#707181' }}>OTP sent to your Email Address</p>\r\n                <form>\r\n                    {otpValues.map((value, index) => (\r\n                        <input\r\n                            key={index}\r\n                            type=\"text\"\r\n                            className=\"otpinput\"\r\n                            maxLength=\"1\"\r\n                            placeholder='0'\r\n                            value={value}\r\n                            onChange={(e) => handleChange(index, e.target.value)}\r\n                            ref={(el) => (inputRefs[index] = el)}\r\n                            style={{ backgroundColor: '#212428', fontSize: '1.2rem' }}\r\n                        />\r\n                    ))}\r\n                </form>\r\n                <center><p style={{ color: '#686978' }}>Didn't Receive code</p>\r\n                    <div className='resend-link'> <a href=\"#\" className=\"resend-link\">\r\n                        Resend Code\r\n                    </a></div>\r\n                    <RequestButton text={'Confirm'} />\r\n                </center>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Otp;\r\n","C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\RequestButton.js",[],[],"C:\\Users\\Ajay\\Desktop\\web\\mock-login-ui\\login\\src\\components\\Input.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":41,"column":123,"nodeType":"53","endLine":41,"endColumn":157},{"ruleId":"51","severity":1,"message":"52","line":46,"column":51,"nodeType":"53","endLine":46,"endColumn":87},"no-unused-vars","'Google' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]